{"ast":null,"code":"var _jsxFileName = \"/Users/beatricelundevall/Technigo/week11/project-happy-thoughts/code/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ScaleLoader } from 'react-spinners';\nimport { AlreadyPosted } from './components/Posted';\nimport { UserInput } from './components/Form';\nconst APIdata = 'https://technigo-thoughts.herokuapp.com/';\nexport const App = () => {\n  const [thoughts, setThoughts] = useState([]);\n  const [postedMessage, setPostedMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(APIdata).then(res => res.json()).then(json => setThoughts(json), setLoading(true));\n  }, [postedMessage]);\n\n  const handleFormSubmit = message => {\n    setPostedMessage(message);\n  };\n\n  const onLiked = thoughtId => {\n    const updatedThoughts = thoughts.map(thought => {\n      if (thought._id === thoughtId) {\n        thought.hearts += 1;\n      }\n\n      return thought;\n    });\n    setThoughts(updatedThoughts);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(UserInput, {\n    formSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), loading ? React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ScaleLoader, {\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })) : thoughts.map(thought => React.createElement(AlreadyPosted, {\n    key: thought._id,\n    thought: thought,\n    onLiked: onLiked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/beatricelundevall/Technigo/week11/project-happy-thoughts/code/src/App.js"],"names":["React","useState","useEffect","ScaleLoader","AlreadyPosted","UserInput","APIdata","App","thoughts","setThoughts","postedMessage","setPostedMessage","loading","setLoading","fetch","then","res","json","handleFormSubmit","message","onLiked","thoughtId","updatedThoughts","map","thought","_id","hearts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,OAAO,GAAG,0CAAhB;AAIA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CAACR,OAAD,CAAL,CACGS,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAIR,WAAW,CAACQ,IAAD,CAF3B,EAGEJ,UAAU,CAAC,IAAD,CAHZ;AAII,GANG,EAMD,CAACH,aAAD,CANC,CAAT;;AASA,QAAMQ,gBAAgB,GAAGC,OAAO,IAAI;AAClCR,IAAAA,gBAAgB,CAACQ,OAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGC,SAAS,IAAI;AAC3B,UAAMC,eAAe,GAAGd,QAAQ,CAACe,GAAT,CAAaC,OAAO,IAAI;AAC9C,UAAIA,OAAO,CAACC,GAAR,KAAgBJ,SAApB,EAA+B;AAC7BG,QAAAA,OAAO,CAACE,MAAR,IAAkB,CAAlB;AACD;;AACD,aAAOF,OAAP;AACD,KALuB,CAAxB;AAMAf,IAAAA,WAAW,CAACa,eAAD,CAAX;AACD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEJ,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGN,OAAO,GAAG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAAH,GACRJ,QAAQ,CAACe,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAED,OAA1C;AAAmD,IAAA,OAAO,EAAEJ,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CAtCM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ScaleLoader } from 'react-spinners'\nimport { AlreadyPosted } from './components/Posted'\nimport { UserInput } from './components/Form'\n\nconst APIdata = 'https://technigo-thoughts.herokuapp.com/'\n\n\n\nexport const App = () => {\n  const [thoughts, setThoughts] = useState([])\n  const [postedMessage, setPostedMessage] = useState('')\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(APIdata)\n      .then(res => res.json())\n      .then(json => setThoughts(json),\n      setLoading(true)\n      )}, [postedMessage])\n\n\n  const handleFormSubmit = message => {\n    setPostedMessage(message)\n  }\n\n  const onLiked = thoughtId => {\n    const updatedThoughts = thoughts.map(thought => {\n      if (thought._id === thoughtId) {\n        thought.hearts += 1\n      }\n      return thought\n    })\n    setThoughts(updatedThoughts)\n  }\n\n  return (\n    <div>\n      <UserInput formSubmit={handleFormSubmit} />\n\n      {loading ? <div className='loading'><ScaleLoader color='black' /></div> : \n      thoughts.map(thought => (\n        <AlreadyPosted key={thought._id} thought={thought} onLiked={onLiked} />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}