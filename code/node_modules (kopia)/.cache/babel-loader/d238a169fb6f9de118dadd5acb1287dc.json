{"ast":null,"code":"var _jsxFileName = \"/Users/beatricelundevall/Technigo/week11/project-happy-thoughts/code/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { HappyThought } from \"./components/Posted\";\nimport { HappyForm } from \"./components/Form\";\nconst APIdata = \"https://technigo-thoughts.herokuapp.com/\";\nexport const App = () => {\n  const [thoughts, setThoughts] = useState([]);\n  const [postedMessage, setPostedMessage] = '';\n  useEffect(() => {\n    fetch(APIdata).then(res => res.json()).then(json => setThoughts(json));\n  }, [postedMessage]);\n\n  const handleFormSubmit = message => {\n    fetch(APIdata, {\n      method: 'POST',\n      body: JSON.stringify({\n        message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => setPostedMessage(message)).catch(err => console.log(\"error:\", err));\n  };\n\n  const onLiked = thoughtId => {\n    const updatedThoughts = thoughts.map(thought => {\n      if (thought._id === thoughtId) {\n        thought.hearts += 1;\n      }\n\n      return thought;\n    });\n    setThoughts(updatedThoughts);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(HappyForm, {\n    onFormSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), thoughts.map(thought => React.createElement(HappyThought, {\n    key: thought._id,\n    thought: thought,\n    onLiked: onLiked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/beatricelundevall/Technigo/week11/project-happy-thoughts/code/src/App.js"],"names":["React","useState","useEffect","HappyThought","HappyForm","APIdata","App","thoughts","setThoughts","postedMessage","setPostedMessage","fetch","then","res","json","handleFormSubmit","message","method","body","JSON","stringify","headers","catch","err","console","log","onLiked","thoughtId","updatedThoughts","map","thought","_id","hearts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,OAAO,GAAG,0CAAhB;AAIA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAqC,EAA3C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACN,OAAD,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAIN,WAAW,CAACM,IAAD,CAF3B;AAGD,GAJQ,EAIN,CAACL,aAAD,CAJM,CAAT;;AAMA,QAAMM,gBAAgB,GAAGC,OAAO,IAAI;AAClCL,IAAAA,KAAK,CAACN,OAAD,EAAU;AACbY,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEJ,QAAAA;AAAF,OAAf,CAFO;AAGbK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHI,KAAV,CAAL,CAKCT,IALD,CAKM,MAAMF,gBAAgB,CAACM,OAAD,CAL5B,EAMCM,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB,CANd;AAOD,GARD;;AAUA,QAAMG,OAAO,GAAGC,SAAS,IAAI;AAC3B,UAAMC,eAAe,GAAGrB,QAAQ,CAACsB,GAAT,CAAaC,OAAO,IAAI;AAC9C,UAAIA,OAAO,CAACC,GAAR,KAAgBJ,SAApB,EAA+B;AAC7BG,QAAAA,OAAO,CAACE,MAAR,IAAkB,CAAlB;AACD;;AACD,aAAOF,OAAP;AACD,KALuB,CAAxB;AAMAtB,IAAAA,WAAW,CAACoB,eAAD,CAAX;AACD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEb,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,QAAQ,CAACsB,GAAT,CAAaC,OAAO,IACnB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA3B;AAAgC,IAAA,OAAO,EAAED,OAAzC;AAAkD,IAAA,OAAO,EAAEJ,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD,CAtCM","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { HappyThought } from \"./components/Posted\"\nimport { HappyForm } from \"./components/Form\"\n\nconst APIdata = \"https://technigo-thoughts.herokuapp.com/\"\n\n\n\nexport const App = () => {\n  const [thoughts, setThoughts] = useState([])\n  const [postedMessage, setPostedMessage] = ('')\n\n  useEffect(() => {\n    fetch(APIdata)\n      .then(res => res.json())\n      .then(json => setThoughts(json))\n  }, [postedMessage])\n\n  const handleFormSubmit = message => {\n    fetch(APIdata, {\n      method: 'POST',\n      body: JSON.stringify({ message }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n    .then(() => setPostedMessage(message))\n    .catch(err => console.log(\"error:\", err))\n  }\n\n  const onLiked = thoughtId => {\n    const updatedThoughts = thoughts.map(thought => {\n      if (thought._id === thoughtId) {\n        thought.hearts += 1\n      }\n      return thought\n    })\n    setThoughts(updatedThoughts)\n  }\n\n  return (\n    <div>\n      <HappyForm onFormSubmit={handleFormSubmit} />\n      {thoughts.map(thought => (\n        <HappyThought key={thought._id} thought={thought} onLiked={onLiked} />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}