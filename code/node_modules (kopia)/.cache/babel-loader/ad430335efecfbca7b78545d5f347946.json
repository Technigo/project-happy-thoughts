{"ast":null,"code":"import { Component, createRef, createElement, forwardRef, cloneElement, Fragment as Fragment$1 } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { createPortal } from 'react-dom';\nimport { typeOf, Fragment, Portal, Suspense, isLazy, isForwardRef } from 'react-is';\nlet baseElement = document.querySelector(\"body\");\n\nfunction set(element) {\n  if (typeof element === \"string\") {\n    const el = document.querySelectorAll(element);\n    baseElement = \"length\" in el ? el[0] : el;\n  } else if (element instanceof HTMLElement) {\n    baseElement = element;\n  } else {\n    throw Error(\"Invalid base element\");\n  }\n}\n\nfunction get() {\n  if (!baseElement) {\n    throw new Error(\"The base element is not set.\");\n  }\n\n  return baseElement;\n}\n\nconst initialState = {\n  contentRect: null,\n  onceRendered: false,\n  transformed: false\n};\n\nfunction placeToAttempts(place) {\n  switch (place) {\n    case \"top\":\n    case \"bottom\":\n    case \"left\":\n    case \"right\":\n      return [place];\n\n    case \"column\":\n      return [\"top\", \"bottom\"];\n\n    case \"row\":\n      return [\"left\", \"right\"];\n\n    case \"start\":\n      return [\"top\", \"left\"];\n\n    case \"end\":\n      return [\"bottom\", \"right\"];\n  }\n}\n\nfunction calculatePosition(placeAttempts, targetRect, contentRect, safetyMargin) {\n  let top = null;\n  let left = null;\n  let showingPlace = null;\n\n  for (const place of placeAttempts) {\n    showingPlace = place;\n\n    if (place === \"top\") {\n      const targetHorizontalCenter = (targetRect.left + targetRect.right) / 2;\n      const targetTop = targetRect.top;\n      const contentWidth = contentRect.width;\n      const contentHeight = contentRect.height;\n      left = targetHorizontalCenter - contentWidth / 2;\n      top = targetTop - contentHeight; // check if valid position\n\n      if (safetyMargin <= top && safetyMargin <= left && left + contentWidth + safetyMargin < window.innerWidth) {\n        break;\n      }\n    } else if (place === \"bottom\") {\n      const targetBottom = targetRect.bottom;\n      const targetHorizontalCenter = (targetRect.left + targetRect.right) / 2;\n      const contentWidth = contentRect.width;\n      const contentHeight = contentRect.height;\n      left = targetHorizontalCenter - contentWidth / 2;\n      top = targetBottom; // check if valid position\n\n      if (top + contentHeight + safetyMargin < window.innerHeight && safetyMargin <= left && left + contentWidth + safetyMargin < window.innerWidth) {\n        break;\n      }\n    } else if (place === \"left\") {\n      const targetLeft = targetRect.left;\n      const targetVerticalCenter = (targetRect.top + targetRect.bottom) / 2;\n      const contentWidth = contentRect.width;\n      const contentHeight = contentRect.height;\n      left = targetLeft - contentWidth;\n      top = targetVerticalCenter - contentHeight / 2; // check if valid position\n\n      if (safetyMargin <= left && safetyMargin <= top && top + contentHeight + safetyMargin < window.innerHeight) {\n        break;\n      }\n    } else if (place === \"right\") {\n      const targetRight = targetRect.right;\n      const targetVerticalCenter = (targetRect.top + targetRect.bottom) / 2;\n      const contentWidth = contentRect.width;\n      const contentHeight = contentRect.height;\n      left = targetRight;\n      top = targetVerticalCenter - contentHeight / 2; // check if valid position\n\n      if (left + contentWidth + safetyMargin < window.innerWidth && safetyMargin <= top && top + contentHeight + safetyMargin < window.innerHeight) {\n        break;\n      }\n    } else {\n      throw new Error(\"Invalid argument `place`.\");\n    }\n  }\n\n  return top !== null && left !== null && showingPlace !== null ? {\n    top,\n    left,\n    place: showingPlace\n  } : null;\n}\n\nclass HintBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.el = document.createElement(\"div\");\n    this.ref = createRef();\n    this.modalRoot = null;\n    this.ro = new ResizeObserver(entries => {\n      if (entries && entries[0] && this.ref.current) {\n        // too problematic code. ResizeObserver's rect didn't work well\n        this.setState({\n          contentRect: this.ref.current.getBoundingClientRect(),\n          onceRendered: true\n        });\n      }\n    });\n\n    this.onTransitionEnd = () => {\n      if (this.props.usesTransition && !this.props.shows && this.props.onDisappeared) {\n        this.props.onDisappeared();\n      }\n    };\n\n    this.el.setAttribute(\"style\", \"display: inline-block; float: left\");\n    this.modalRoot = get();\n  }\n\n  componentDidMount() {\n    if (this.modalRoot === null) {\n      throw new Error(\"Modal root element is invalid.\");\n    }\n\n    if (!this.ref.current) {\n      throw new Error(\"Reference to the component is invalid.\");\n    }\n\n    this.modalRoot.appendChild(this.el);\n    this.ro.observe(this.ref.current);\n\n    if (this.props.rendersSmoothly) {\n      setTimeout(() => {\n        this.setState({\n          transformed: true\n        });\n      }, 50);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.modalRoot) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.ro.disconnect();\n  }\n\n  render() {\n    let position = null;\n    let showingPlace = \"\";\n\n    if (this.state.contentRect) {\n      const attempts = this.props.place instanceof Array ? this.props.place : placeToAttempts(this.props.place);\n      const result = calculatePosition(attempts, this.props.rect, this.state.contentRect, this.props.safetyMargin);\n\n      if (result !== null) {\n        const {\n          place,\n          ...pos\n        } = result;\n        position = pos;\n        showingPlace = place;\n      }\n    }\n\n    return createPortal(createElement(\"div\", {\n      ref: this.ref,\n      style: {\n        display: \"inline-flex\",\n        position: \"absolute\",\n        left: `0`,\n        top: `0`,\n        transform: position ? `translate(${position.left}px,${position.top}px)` : undefined,\n        transition: this.props.rendersSmoothly && this.state.transformed ? \"transform 0.05s ease-in-out\" : undefined\n      }\n    }, createElement(\"div\", {\n      onTransitionEnd: this.onTransitionEnd,\n      className: [this.props.bodyClass, this.props.shows && (!this.props.usesTransition || this.state.onceRendered) ? this.props.shownClass : this.props.hiddenClass, showingPlace].join(\" \")\n    }, this.props.children)), this.el);\n  }\n\n}\n\nconst HintTarget = forwardRef(function HintTargetCore({\n  children,\n  ...events\n}, ref) {\n  if (typeof children === \"undefined\" || children === null) {\n    return null;\n  }\n\n  switch (typeOf(children)) {\n    case Fragment:\n      throw new Error(\"Target with React Fragment is not supported\");\n\n    case Portal:\n      throw new Error(\"Target with React Portal is not supported\");\n\n    case Suspense:\n      throw new Error(\"Target with React Suspense is not supported\");\n  }\n\n  if (Array.isArray(children)) {\n    throw new Error(\"Target with React NodeArray is not supported\");\n  } else if (typeof children === \"object\") {\n    if (\"type\" in children) {\n      if (isLazy(children.type)) {\n        throw new Error(\"Target with React lazy is not supported\");\n      }\n\n      if (typeof children.type === \"function\" || isForwardRef(children)) {\n        // React Function/Class Component\n        throw Error(\"Target with React Function/Class Component is not supported\");\n      }\n\n      if (!(\"children\" in children)) {\n        // React element(s)\n        // register events and ref to the targets\n        return cloneElement(children, { ...events,\n          ref\n        });\n      }\n    }\n\n    throw Error(\"Unknown\");\n  } // raw text\n\n\n  return createElement(\"span\", Object.assign({}, events, {\n    style: {\n      display: \"inline-flex\"\n    },\n    ref: ref\n  }), children);\n});\nconst initialState$1 = {\n  rect: null,\n  rendersBody: false,\n  showsBody: false,\n  originalPlace: null\n};\nconst defaultProps = {\n  place: \"top\",\n  centralizes: true,\n  bodyClass: \"react-portal-hint__body\",\n  usesTransition: true,\n  targetMoves: false,\n  rendersSmoothly: true,\n  events: [\"mouse-hover\"],\n  safetyMarginOfHint: 4,\n  keepsOriginalPlace: false\n};\n\nclass ReactPortalHint extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState$1;\n    this.targetRef = createRef();\n    this.ro = new ResizeObserver(entries => {\n      if (!this.props.targetMoves && this.state.rendersBody && entries && entries[0]) {\n        // too problematic code. ResizeObserver's rect didn't work well\n        this.updateRect();\n      }\n    });\n    this.intervalHandler = null;\n\n    this.show = () => {\n      if (!this.targetRef.current) {\n        throw new Error(\"Reference to the component is invalid.\");\n      }\n\n      this.setState({\n        rendersBody: true,\n        showsBody: true,\n        rect: this.targetRef.current.getBoundingClientRect() // if observer works in all situation, this is not necessary\n\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        showsBody: false\n      });\n    };\n\n    this.updateRect = () => {\n      if (this.targetRef.current) {\n        this.setState({\n          rect: this.targetRef.current.getBoundingClientRect()\n        });\n      }\n    };\n\n    this.onClick = () => {\n      if (this.props.events.includes(\"click\")) {\n        if (this.state.showsBody) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    };\n\n    this.onDoubleClick = () => {\n      if (this.props.events.includes(\"double-click\")) {\n        if (this.state.showsBody) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    };\n\n    this.onFocus = () => {\n      if (this.props.events.includes(\"focus\")) {\n        this.show();\n      }\n    };\n\n    this.onBlur = () => {\n      if (this.props.events.includes(\"focus\")) {\n        this.hide();\n      }\n    };\n\n    this.onMouseEnter = () => {\n      if (this.props.events.includes(\"mouse-hover\")) {\n        this.show();\n      }\n    };\n\n    this.onMouseLeave = () => {\n      if (this.props.events.includes(\"mouse-hover\")) {\n        this.hide();\n      }\n    };\n\n    this.onDisappeared = () => {\n      this.setState({\n        rendersBody: false\n      });\n    };\n  }\n\n  static setBaseElement(element) {\n    set(element);\n  }\n\n  componentDidMount() {\n    if (typeof this.props.children === \"undefined\" || this.props.children === null) {\n      return;\n    }\n\n    if (!this.targetRef.current) {\n      throw new Error(\"Reference to the component is invalid.\");\n    }\n\n    this.ro.observe(this.targetRef.current);\n    this.intervalHandler = setInterval(() => {\n      if (this.props.targetMoves && this.state.rendersBody) {\n        this.updateRect();\n      }\n    }, 50);\n  }\n\n  componentWillUnmount() {\n    this.ro.disconnect();\n\n    if (this.intervalHandler !== null) {\n      clearInterval(this.intervalHandler);\n    }\n  }\n\n  render() {\n    return createElement(Fragment$1, null, createElement(HintTarget, {\n      ref: this.targetRef,\n      onClick: this.onClick,\n      onDoubleClick: this.onDoubleClick,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    }, this.props.children), this.state.rendersBody && this.state.rect && createElement(HintBody, {\n      rect: this.state.rect,\n      place: this.props.place,\n      safetyMargin: this.props.safetyMarginOfHint,\n      rendersSmoothly: this.props.rendersSmoothly,\n      shows: this.state.showsBody,\n      bodyClass: this.props.bodyClass,\n      shownClass: \"shown\",\n      hiddenClass: \"hidden\",\n      usesTransition: this.props.usesTransition,\n      onDisappeared: this.onDisappeared\n    }, typeof this.props.content === \"function\" ? this.props.content(this.state.rect) : this.props.content));\n  }\n\n}\n\nReactPortalHint.defaultProps = defaultProps;\nexport default ReactPortalHint;","map":{"version":3,"sources":["/Users/beatricelundevall/Technigo/week11/project-happy-thoughts/code/node_modules/react-portal-hint/dist/index.js"],"names":["Component","createRef","createElement","forwardRef","cloneElement","Fragment","Fragment$1","ResizeObserver","createPortal","typeOf","Portal","Suspense","isLazy","isForwardRef","baseElement","document","querySelector","set","element","el","querySelectorAll","HTMLElement","Error","get","initialState","contentRect","onceRendered","transformed","placeToAttempts","place","calculatePosition","placeAttempts","targetRect","safetyMargin","top","left","showingPlace","targetHorizontalCenter","right","targetTop","contentWidth","width","contentHeight","height","window","innerWidth","targetBottom","bottom","innerHeight","targetLeft","targetVerticalCenter","targetRight","HintBody","constructor","props","state","ref","modalRoot","ro","entries","current","setState","getBoundingClientRect","onTransitionEnd","usesTransition","shows","onDisappeared","setAttribute","componentDidMount","appendChild","observe","rendersSmoothly","setTimeout","componentWillUnmount","removeChild","disconnect","render","position","attempts","Array","result","rect","pos","style","display","transform","undefined","transition","className","bodyClass","shownClass","hiddenClass","join","children","HintTarget","HintTargetCore","events","isArray","type","Object","assign","initialState$1","rendersBody","showsBody","originalPlace","defaultProps","centralizes","targetMoves","safetyMarginOfHint","keepsOriginalPlace","ReactPortalHint","arguments","targetRef","updateRect","intervalHandler","show","hide","onClick","includes","onDoubleClick","onFocus","onBlur","onMouseEnter","onMouseLeave","setBaseElement","setInterval","clearInterval","content"],"mappings":"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","sourcesContent":["import { Component, createRef, createElement, forwardRef, cloneElement, Fragment as Fragment$1 } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { createPortal } from 'react-dom';\nimport { typeOf, Fragment, Portal, Suspense, isLazy, isForwardRef } from 'react-is';\n\nlet baseElement = document.querySelector(\"body\");\r\nfunction set(element) {\r\n    if (typeof element === \"string\") {\r\n        const el = document.querySelectorAll(element);\r\n        baseElement = (\"length\" in el ? el[0] : el);\r\n    }\r\n    else if (element instanceof HTMLElement) {\r\n        baseElement = element;\r\n    }\r\n    else {\r\n        throw Error(\"Invalid base element\");\r\n    }\r\n}\r\nfunction get() {\r\n    if (!baseElement) {\r\n        throw new Error(\"The base element is not set.\");\r\n    }\r\n    return baseElement;\r\n}\n\nconst initialState = {\r\n    contentRect: null,\r\n    onceRendered: false,\r\n    transformed: false\r\n};\r\nfunction placeToAttempts(place) {\r\n    switch (place) {\r\n        case \"top\":\r\n        case \"bottom\":\r\n        case \"left\":\r\n        case \"right\":\r\n            return [place];\r\n        case \"column\":\r\n            return [\"top\", \"bottom\"];\r\n        case \"row\":\r\n            return [\"left\", \"right\"];\r\n        case \"start\":\r\n            return [\"top\", \"left\"];\r\n        case \"end\":\r\n            return [\"bottom\", \"right\"];\r\n    }\r\n}\r\nfunction calculatePosition(placeAttempts, targetRect, contentRect, safetyMargin) {\r\n    let top = null;\r\n    let left = null;\r\n    let showingPlace = null;\r\n    for (const place of placeAttempts) {\r\n        showingPlace = place;\r\n        if (place === \"top\") {\r\n            const targetHorizontalCenter = (targetRect.left + targetRect.right) / 2;\r\n            const targetTop = targetRect.top;\r\n            const contentWidth = contentRect.width;\r\n            const contentHeight = contentRect.height;\r\n            left = targetHorizontalCenter - contentWidth / 2;\r\n            top = targetTop - contentHeight;\r\n            // check if valid position\r\n            if (safetyMargin <= top &&\r\n                safetyMargin <= left &&\r\n                left + contentWidth + safetyMargin < window.innerWidth) {\r\n                break;\r\n            }\r\n        }\r\n        else if (place === \"bottom\") {\r\n            const targetBottom = targetRect.bottom;\r\n            const targetHorizontalCenter = (targetRect.left + targetRect.right) / 2;\r\n            const contentWidth = contentRect.width;\r\n            const contentHeight = contentRect.height;\r\n            left = targetHorizontalCenter - contentWidth / 2;\r\n            top = targetBottom;\r\n            // check if valid position\r\n            if (top + contentHeight + safetyMargin < window.innerHeight &&\r\n                safetyMargin <= left &&\r\n                left + contentWidth + safetyMargin < window.innerWidth) {\r\n                break;\r\n            }\r\n        }\r\n        else if (place === \"left\") {\r\n            const targetLeft = targetRect.left;\r\n            const targetVerticalCenter = (targetRect.top + targetRect.bottom) / 2;\r\n            const contentWidth = contentRect.width;\r\n            const contentHeight = contentRect.height;\r\n            left = targetLeft - contentWidth;\r\n            top = targetVerticalCenter - contentHeight / 2;\r\n            // check if valid position\r\n            if (safetyMargin <= left &&\r\n                safetyMargin <= top &&\r\n                top + contentHeight + safetyMargin < window.innerHeight) {\r\n                break;\r\n            }\r\n        }\r\n        else if (place === \"right\") {\r\n            const targetRight = targetRect.right;\r\n            const targetVerticalCenter = (targetRect.top + targetRect.bottom) / 2;\r\n            const contentWidth = contentRect.width;\r\n            const contentHeight = contentRect.height;\r\n            left = targetRight;\r\n            top = targetVerticalCenter - contentHeight / 2;\r\n            // check if valid position\r\n            if (left + contentWidth + safetyMargin < window.innerWidth &&\r\n                safetyMargin <= top &&\r\n                top + contentHeight + safetyMargin < window.innerHeight) {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid argument `place`.\");\r\n        }\r\n    }\r\n    return top !== null && left !== null && showingPlace !== null\r\n        ? { top, left, place: showingPlace }\r\n        : null;\r\n}\r\nclass HintBody extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n        this.el = document.createElement(\"div\");\r\n        this.ref = createRef();\r\n        this.modalRoot = null;\r\n        this.ro = new ResizeObserver((entries) => {\r\n            if (entries && entries[0] && this.ref.current) {\r\n                // too problematic code. ResizeObserver's rect didn't work well\r\n                this.setState({\r\n                    contentRect: this.ref.current.getBoundingClientRect(),\r\n                    onceRendered: true\r\n                });\r\n            }\r\n        });\r\n        this.onTransitionEnd = () => {\r\n            if (this.props.usesTransition &&\r\n                !this.props.shows &&\r\n                this.props.onDisappeared) {\r\n                this.props.onDisappeared();\r\n            }\r\n        };\r\n        this.el.setAttribute(\"style\", \"display: inline-block; float: left\");\r\n        this.modalRoot = get();\r\n    }\r\n    componentDidMount() {\r\n        if (this.modalRoot === null) {\r\n            throw new Error(\"Modal root element is invalid.\");\r\n        }\r\n        if (!this.ref.current) {\r\n            throw new Error(\"Reference to the component is invalid.\");\r\n        }\r\n        this.modalRoot.appendChild(this.el);\r\n        this.ro.observe(this.ref.current);\r\n        if (this.props.rendersSmoothly) {\r\n            setTimeout(() => {\r\n                this.setState({ transformed: true });\r\n            }, 50);\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.modalRoot) {\r\n            this.modalRoot.removeChild(this.el);\r\n        }\r\n        this.ro.disconnect();\r\n    }\r\n    render() {\r\n        let position = null;\r\n        let showingPlace = \"\";\r\n        if (this.state.contentRect) {\r\n            const attempts = this.props.place instanceof Array\r\n                ? this.props.place\r\n                : placeToAttempts(this.props.place);\r\n            const result = calculatePosition(attempts, this.props.rect, this.state.contentRect, this.props.safetyMargin);\r\n            if (result !== null) {\r\n                const { place, ...pos } = result;\r\n                position = pos;\r\n                showingPlace = place;\r\n            }\r\n        }\r\n        return createPortal(createElement(\"div\", { ref: this.ref, style: {\r\n                display: \"inline-flex\",\r\n                position: \"absolute\",\r\n                left: `0`,\r\n                top: `0`,\r\n                transform: position\r\n                    ? `translate(${position.left}px,${position.top}px)`\r\n                    : undefined,\r\n                transition: this.props.rendersSmoothly && this.state.transformed\r\n                    ? \"transform 0.05s ease-in-out\"\r\n                    : undefined\r\n            } },\r\n            createElement(\"div\", { onTransitionEnd: this.onTransitionEnd, className: [\r\n                    this.props.bodyClass,\r\n                    this.props.shows &&\r\n                        (!this.props.usesTransition || this.state.onceRendered)\r\n                        ? this.props.shownClass\r\n                        : this.props.hiddenClass,\r\n                    showingPlace\r\n                ].join(\" \") }, this.props.children)), this.el);\r\n    }\r\n}\n\nconst HintTarget = forwardRef(function HintTargetCore({ children, ...events }, ref) {\r\n    if (typeof children === \"undefined\" || children === null) {\r\n        return null;\r\n    }\r\n    switch (typeOf(children)) {\r\n        case Fragment:\r\n            throw new Error(\"Target with React Fragment is not supported\");\r\n        case Portal:\r\n            throw new Error(\"Target with React Portal is not supported\");\r\n        case Suspense:\r\n            throw new Error(\"Target with React Suspense is not supported\");\r\n    }\r\n    if (Array.isArray(children)) {\r\n        throw new Error(\"Target with React NodeArray is not supported\");\r\n    }\r\n    else if (typeof children === \"object\") {\r\n        if (\"type\" in children) {\r\n            if (isLazy(children.type)) {\r\n                throw new Error(\"Target with React lazy is not supported\");\r\n            }\r\n            if (typeof children.type === \"function\" ||\r\n                isForwardRef(children)) {\r\n                // React Function/Class Component\r\n                throw Error(\"Target with React Function/Class Component is not supported\");\r\n            }\r\n            if (!(\"children\" in children)) {\r\n                // React element(s)\r\n                // register events and ref to the targets\r\n                return cloneElement(children, {\r\n                    ...events,\r\n                    ref\r\n                });\r\n            }\r\n        }\r\n        throw Error(\"Unknown\");\r\n    }\r\n    // raw text\r\n    return (createElement(\"span\", Object.assign({}, events, { style: { display: \"inline-flex\" }, ref: ref }), children));\r\n});\n\nconst initialState$1 = {\r\n    rect: null,\r\n    rendersBody: false,\r\n    showsBody: false,\r\n    originalPlace: null\r\n};\r\nconst defaultProps = {\r\n    place: \"top\",\r\n    centralizes: true,\r\n    bodyClass: \"react-portal-hint__body\",\r\n    usesTransition: true,\r\n    targetMoves: false,\r\n    rendersSmoothly: true,\r\n    events: [\"mouse-hover\"],\r\n    safetyMarginOfHint: 4,\r\n    keepsOriginalPlace: false\r\n};\r\nclass ReactPortalHint extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = initialState$1;\r\n        this.targetRef = createRef();\r\n        this.ro = new ResizeObserver((entries) => {\r\n            if (!this.props.targetMoves &&\r\n                this.state.rendersBody &&\r\n                entries &&\r\n                entries[0]) {\r\n                // too problematic code. ResizeObserver's rect didn't work well\r\n                this.updateRect();\r\n            }\r\n        });\r\n        this.intervalHandler = null;\r\n        this.show = () => {\r\n            if (!this.targetRef.current) {\r\n                throw new Error(\"Reference to the component is invalid.\");\r\n            }\r\n            this.setState({\r\n                rendersBody: true,\r\n                showsBody: true,\r\n                rect: this.targetRef.current.getBoundingClientRect() // if observer works in all situation, this is not necessary\r\n            });\r\n        };\r\n        this.hide = () => {\r\n            this.setState({ showsBody: false });\r\n        };\r\n        this.updateRect = () => {\r\n            if (this.targetRef.current) {\r\n                this.setState({ rect: this.targetRef.current.getBoundingClientRect() });\r\n            }\r\n        };\r\n        this.onClick = () => {\r\n            if (this.props.events.includes(\"click\")) {\r\n                if (this.state.showsBody) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n        };\r\n        this.onDoubleClick = () => {\r\n            if (this.props.events.includes(\"double-click\")) {\r\n                if (this.state.showsBody) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n        };\r\n        this.onFocus = () => {\r\n            if (this.props.events.includes(\"focus\")) {\r\n                this.show();\r\n            }\r\n        };\r\n        this.onBlur = () => {\r\n            if (this.props.events.includes(\"focus\")) {\r\n                this.hide();\r\n            }\r\n        };\r\n        this.onMouseEnter = () => {\r\n            if (this.props.events.includes(\"mouse-hover\")) {\r\n                this.show();\r\n            }\r\n        };\r\n        this.onMouseLeave = () => {\r\n            if (this.props.events.includes(\"mouse-hover\")) {\r\n                this.hide();\r\n            }\r\n        };\r\n        this.onDisappeared = () => {\r\n            this.setState({ rendersBody: false });\r\n        };\r\n    }\r\n    static setBaseElement(element) {\r\n        set(element);\r\n    }\r\n    componentDidMount() {\r\n        if (typeof this.props.children === \"undefined\" ||\r\n            this.props.children === null) {\r\n            return;\r\n        }\r\n        if (!this.targetRef.current) {\r\n            throw new Error(\"Reference to the component is invalid.\");\r\n        }\r\n        this.ro.observe(this.targetRef.current);\r\n        this.intervalHandler = setInterval(() => {\r\n            if (this.props.targetMoves && this.state.rendersBody) {\r\n                this.updateRect();\r\n            }\r\n        }, 50);\r\n    }\r\n    componentWillUnmount() {\r\n        this.ro.disconnect();\r\n        if (this.intervalHandler !== null) {\r\n            clearInterval(this.intervalHandler);\r\n        }\r\n    }\r\n    render() {\r\n        return (createElement(Fragment$1, null,\r\n            createElement(HintTarget, { ref: this.targetRef, onClick: this.onClick, onDoubleClick: this.onDoubleClick, onFocus: this.onFocus, onBlur: this.onBlur, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave }, this.props.children),\r\n            this.state.rendersBody && this.state.rect && (createElement(HintBody, { rect: this.state.rect, place: this.props.place, safetyMargin: this.props.safetyMarginOfHint, rendersSmoothly: this.props.rendersSmoothly, shows: this.state.showsBody, bodyClass: this.props.bodyClass, shownClass: \"shown\", hiddenClass: \"hidden\", usesTransition: this.props.usesTransition, onDisappeared: this.onDisappeared }, typeof this.props.content === \"function\"\r\n                ? this.props.content(this.state.rect)\r\n                : this.props.content))));\r\n    }\r\n}\r\nReactPortalHint.defaultProps = defaultProps;\n\nexport default ReactPortalHint;\n"]},"metadata":{},"sourceType":"module"}