import React, { useState, useEffect } from 'react'
import { LikeButton } from "./LikeButton"
import moment from "moment"
import './message-list.css'

export const MessageList = () => {
  const messages_url = "https://technigo-thoughts.herokuapp.com/"
  const [messages, setMessages] = useState([])

  useEffect(() => {
    fetch(messages_url)
      .then(res => res.json())
      .then(data => {
        setMessages(data)
      })
  }, [])

  // This will map through all your messages
  // When finding a message with the same id as your liked message it will add one like to your "counter"
  const onMessageLiked = (likedMessageId) => {
    const updatedMessages = messages.map((message) => {
      if (message._id === likedMessageId) {
        message.hearts += 1
      }
      return message
    })
    setMessages(updatedMessages)
  }

  return (
    <section className="message-list">
      {
        messages.map(message => (
          <article className="message">
            <p key={message._id}>{message.message}
            </p>
            <div className="likes-and-time-container">
              // Added for id, message and onMessageLiked, see LikeButton.js
              <LikeButton
                id={message._id}
                message={message}
                onMessageLiked={onMessageLiked} />
              <div className="likes"> x {message.hearts}</div>
              <div className="time-stamp">{moment(message.createdAt).fromNow()}</div>
            </div>
          </article>
        ))
      }
    </section>
  )
}


LikeButton
import React from 'react' // Removed useState not used in component

export const LikeButton = (props) => {
  const likes_url = `https://technigo-thoughts.herokuapp.com/${props.id}/like`
  // Removed const [likes, setLikes] = useState()
  const handleClick = () => {
    fetch(likes_url, {
      method: "post",
      headers: {
        'Content-Type': 'application/json'
      },
      body: ""
    }).then(() => {
      props.onMessageLiked(props.id) // Added this instead of setLikes(props.likes + 1), callback to MessageList.js
    })
  }

  return (
    <div>
      <button
        onClick={handleClick}>Heart</button>
    </div>
  )
}